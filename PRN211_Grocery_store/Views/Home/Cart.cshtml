@model IEnumerable<PRN211_Grocery_store.Models.ViewModel.Item>

@{
    ViewData["Title"] = "Cart";
}
@functions{
    public string calculateTotal(){
        decimal total = 0;
        if (Model != null)
        {
           @foreach (var item in Model)
           {
                total += (item.Product.Price * item.Quantity);  
            }
        }
        return total.ToString();
    }
}
<h1>Your cart</h1>
@if(Model != null && Model.Count() > 0){
    <table class="table">
    <thead>
        <tr>
            <th>
                Image
            </th>
            <th>
                Product
            </th>
            <th>
                Price
            </th>
            <th>
                Quantity
            </th>
            <th>
                Total
            </th>
            <th>
                Action
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model) {
            <tr>
                <td>
                    <img class="cart-img" src="@item.Product.ImageURL" alt="@item.Product.Id"/>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Product.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Product.Price)
                </td>
                <td class="d-flex flex-center">
                        @using(Html.BeginForm("DecreaseQuantity", "Home", new {@productId = item.Product.Id}, FormMethod.Post))
                        {
                            <button class="btn btn-outline-secondary btn-sm">
                                <i  class="fa-solid fa-minus"></i>
                            </button>
                        }
                        <input class="form-control form-control-sm cart-quantity" type="text" value="@Html.DisplayFor(modelItem => item.Quantity)" disabled/> 
                        @if(item.Product.Quantity > item.Quantity){
                            using(Html.BeginForm("IncreaseQuantity", "Home", new {@productId = item.Product.Id}, FormMethod.Post))
                                {
                                    <button class="btn btn-outline-secondary btn-sm">
                                        <i class="fa-solid fa-plus"></i>
                                    </button>
                            }
                        }
                        else
                        {
                            <button class="btn btn-outline-secondary btn-sm" disabled>
                                <i class="fa-solid fa-plus"></i>
                            </button>
                        }
                </td>
                <td>
                    <div>
                        @(@item.Quantity * @item.Product.Price)
                    </div>
                </td>
                <td>
                        @using(Html.BeginForm("RemoveFromCart", "Home", new {@productId = item.Product.Id}, FormMethod.Post))
                        {
                            <button type="submit" class="btn btn-outline-danger">Remove</button>
                        }
                </td>
            </tr>
        }
    </tbody>
    <tfoot>
        <tr class="h4">
            <td class="text-bold"></td>
            <td class="text-bold"></td>
            <td class="text-bold"></td>
            <td class="text-bold">Total: </td>
            <td>
                  @calculateTotal()
            </td>
            <td>
                    @using(Html.BeginForm("Checkout", "Home", FormMethod.Post))
                    {
                        <button class="btn btn-outline-primary">
                            Checkout
                        </button>
                    }
            </td>
        </tr>
    </tfoot>
    </table>
}
else {
    <h3 class="text-muted">There is no item in cart</h3>
}
